# yaml-language-server: $schema=https://vscodeedu.com/assets/schema/course-v2.schema.json
id: lessonpart7
title: Leap year
content: >+
  ## Introduction


  In this exercise, you will write a Python program to determine if a given year
  is a leap year. Leap years are an interesting concept in the Gregorian
  calendar, and understanding how to calculate them is a useful programming
  exercise that involves conditional logic.


  ## Problem Statement


  Write a function to check whether a given year is a leap year. A leap year is
  exactly divisible by 4, except for end-of-century years, which must be
  divisible by 400. This means that the year 2000 was a leap year, although 1900
  was not.


  ## Explanation


  To determine if a year is a leap year, follow these rules:


  1. If the year is divisible by 400, it is a leap year.

  2. If the year is divisible by 100 but not by 400, it is not a leap year.

  3. If the year is divisible by 4 but not by 100, it is a leap year.

  4. If the year is not divisible by 4, it is not a leap year.


  ## Function Signature


  ```python

  def is_leap_year(year):

  ```


  ## Example Test Cases


  ```python

  print(is_leap_year(2000))  # Expected output: True

  print(is_leap_year(1900))  # Expected output: False

  print(is_leap_year(2012))  # Expected output: True

  print(is_leap_year(2019))  # Expected output: False

  ```


  ## Constraints


  * The input year will be a positive integer.


  ## Hint


  * Use the modulo operator `%` to determine divisibility.


  ## Challenges


  * Try to optimize your solution to minimize the number of conditional checks.

