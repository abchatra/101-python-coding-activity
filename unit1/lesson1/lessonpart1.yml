# yaml-language-server: $schema=https://vscodeedu.com/assets/schema/course-v2.schema.json
id: lessonpart1
title: Add two numbers
duration: 7327
content: >
  ## Introduction


  Addition is one of the most fundamental operations in mathematics and
  programming. In this problem, we will implement a simple Python function to
  add two numbers. This exercise will help reinforce the concept of function
  definition, parameter passing, and returning values.


  ## Problem Statement


  Write a Python function that takes two numbers as input and returns their sum.
  You need to define a function that accepts two arguments and returns the
  result of their addition.


  ## Explanation


  To solve this problem, follow these steps:


  1\. Define a function that takes two parameters.


  2\. Use the \`+\` operator to compute the sum.


  3\. Return the sum of the two numbers.


  Your function should be reusable and work for different sets of inputs.


  ## Function Signature


  ```

  def add_numbers(a, b)

  ```


  ## &#x20;Example Test Cases


  ### &#x20;Input:


  ```

  print(add_numbers(3, 5))  


  print(add_numbers(-2, 8))  


  print(add_numbers(0, 0))  


  print(add_numbers(100, 200))

  ```


  ### Output:


  ```

  8  


  6  


  0  


  300

  ```


  ### Constraints


  1\. The function should accept two integers.


  2\. The function should return an integer.


  3\. The numbers can be positive, negative, or zero.


  ## Hint


  \- Use the \`+\` operator to perform addition.


  \- Ensure that your function correctly returns the sum and does not print
  anything inside the function.


  ### Challenges


  1\. Modify the function to handle floating-point numbers (\`float\` type) in
  addition to integers.


  2\. Extend the function to accept multiple numbers and return their sum using
  \`\*args\`.


  3\. Implement error handling to ensure that the inputs are numeric.


  This problem helps beginners understand function definition, return
  statements, and basic arithmetic operations in Python.
showEditor: true
editors:
  - course1/unit1/lesson1/lessonpart1/test.py
